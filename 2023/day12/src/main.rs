use clap::Parser;
use std::fs;
use itertools::{Itertools, Position};

extern crate rayon;

use rayon::prelude::*;

#[derive(Parser, Debug)]
#[command(author, version, about, long_about = None)]
struct Args {
    /// Input file
    #[arg(short, long)]
    input: String
}


#[derive(Debug, PartialEq, Eq, Clone)]
enum Marker {
    Unknown,
    Fixed,
    Broken,
    None,
}

impl Marker {
    fn new(c: char) -> Marker {
        match c {
            '?' => Marker::Unknown,
            '#' => Marker::Broken,
            '.' => Marker::Fixed,
            _ => panic!("Unknown character"),
        }
    }
}

#[derive(Debug, Clone)]
struct Section {
    marker: Marker,
    len: usize, 
}


#[derive(Debug)]
struct Field {
    markers: Vec<Marker>,
    secs: Vec<Section>,
    marker_string: String,
}

fn get_counts(n: i64, counts: &Vec<i64>) -> Option<i64> {
    let min_len: i64 = counts.iter().sum::<i64>() + counts.iter().count() as i64 - 1;
    let extra_len = n - min_len;
    if min_len == n {
        return Some(1);
    }
    if min_len > n {
        return Some(0);
    }
    if counts.len() == 1 {
        let tmp = n - counts.last().unwrap() + 1;
        return Some(tmp);
    }
    // Works when extra len is 1
    return match (extra_len, counts.len())  {
        (1,_) => Some(extra_len * (1 + counts.len() as i64)),
        // 2 groups, this is solved
        (n,2) => Some((n+1) * (n + 2) / 2),

        // 3 groups, 
        (2,3) => Some(12), // Still need a general formula
        //
        _ => None,
        //(n,3) => 12, // 
        //(2,4) => 10, // Not correct!
        
        //(3,3) => 10, // Not correct!
        //(3,4) => 10, // Not correct!
        
        //(4,3) => 10, // Not correct!
        //(4,4) => 10, // Not correct!
        //(4,5) => 10, // Not correct!
        
        //(5,3) => 10, // Not correct!
        //_ => panic!("Unknown combo extra N: {}, count: {}", extra_len, counts.len()), 
    }
}

impl Field {
    fn new(v: &str, skim: bool) -> Field{
        let mut vv: &str = &v.replacen("..",".",10).replacen("..",".",10);
        if skim {
            vv = vv.trim_matches('.');
        }
        let mut f = Field {marker_string: vv.to_string(), secs: Vec::new(), markers: vv.chars().map(|c| {Marker::new(c)}).collect()};
        let mut prev = Marker::None;
        let mut sec_len: usize = 0;
        for m in &f.markers {
            if (m == &prev) | (prev == Marker::None) {
                sec_len += 1;
            }
            else {
                f.secs.push(Section {marker: prev, len: sec_len});
                sec_len = 1;
            }
            prev = m.clone();
        }
        f.secs.push(Section {marker: prev, len: sec_len});
        f
    }

    fn possible(&self) -> usize {
        self.secs.iter().map(|m| {
            match m.marker {
                Marker::Unknown | Marker::Broken => Some(m.len),
                Marker::Fixed => None,
                _ => panic!("Panic"),
            }
        }).while_some().sum()
    }

    fn unknown(&self) -> usize {
        // Return amount of unknows at start
        self.secs.iter().map(|m| {
            match m.marker {
                Marker::Unknown => Some(m.len),
                Marker::Fixed | Marker::Broken => None,
                _ => panic!("Panic"),
            }
        }).while_some().sum()
    }

    fn get_sections(&self) -> Vec<i64> {
        self.secs.iter().filter_map(|m| {
            match m.marker {
                Marker::Broken => Some(m.len as i64),
                _ => None,
            }
        }).collect()
    }

    fn get_options(&self) -> Vec<Vec<i64>> {
        // Brute force method
        get_options(&self.marker_string)
    }

    fn len(&self) -> usize {
        self.markers.len()
    }

    fn get_options_alt(&self, counts: &Vec<i64>) -> i64 {
        if counts.len() == 0 {
            if self.markers.iter().filter(|m| m == &&Marker::Broken).count() == 0 {
                return 1;
            } else {
                return 0;
            }
        }
        if (self.secs.len() == 1) & false {
            let sec = self.secs.last().unwrap();
            if sec.marker == Marker::Unknown {
                match get_counts(sec.len as i64, &counts) {
                    Some(v) => return v,
                    None => (),
                }
            }
        }
        let min_len: i64 = counts.iter().sum::<i64>() as i64 + counts.len() as i64 - 1;
        if (self.len() as i64) < min_len {
            return 0;
        }
        let c1 = *counts.iter().next().unwrap() as usize;
        let c_last = *counts.iter().last().unwrap() as usize;
        let n = self.len();
        if self.secs.len() > 1 {
            let last_sec = self.secs.iter().last().unwrap();
            match last_sec.marker {
                Marker::Broken => {
                    let n = self.len();
                    if n < c_last {
                        return 0;
                    }
                    if n > c_last {
                        let sub_field = Field::new(self.marker_string.get(0..n-c_last-1).unwrap(), true);
                        let sub_counts = counts[0..counts.len()-1].to_vec();
                        return sub_field.get_options_alt(&sub_counts);
                    } else {
                        return 1;
                    }
                },
                Marker::Fixed =>{
                    let l = last_sec.len as usize;
                    let sub_field = Field::new(self.marker_string.get(0..n-l).unwrap(), true);
                    return sub_field.get_options_alt(&counts);
                }
                _ => (),
            }
        }
        let first_sec = self.secs.iter().next().unwrap();
        match first_sec.marker {
            Marker::Broken => {
                let n = self.len();
                if n < c1 {
                    return 0;
                }
                if c1 > self.possible() {
                    return 0;
                }
                if n > c1 {
                    match self.markers.get(c1) {
                        Some(Marker::Broken) => {
                            return 0;
                        },
                        _ => (),
                    }
                    let sub_field = Field::new(self.marker_string.get(c1+1..n).unwrap(), true);
                    let sub_counts = counts[1..counts.len()].to_vec();
                    return sub_field.get_options_alt(&sub_counts);
                } else {
                    return 1;
                }
            }
            Marker::Fixed =>{
                let l = first_sec.len as usize;
                let sub_field = Field::new(self.marker_string.get(l..n).unwrap(), true);
                let tmp = sub_field.get_options_alt(&counts);
                return tmp;
            }
            Marker::Unknown => {
                let f1 = Field::new(&self.marker_string.replacen("?", "#", 1), true);
                let f2 = Field::new(&self.marker_string.replacen("?", ".", 1), true);
                return f1.get_options_alt(&counts) + f2.get_options_alt(&counts);
            },
            _ => {panic!("HEY");},
        }
    }
}

fn get_options(markers: &String) -> Vec<Vec<i64>> {
    // Brute force solution
    let n: usize = markers.chars().map(|c| {
        match c {
            '?' => 1,
            _ => 0,
        }
    }).sum();

    if n == 0 {
        let f = Field::new(&markers, true);
        return vec![f.get_sections()];
    } else {
        let marker1 = markers.replacen("?", "#", 1);
        let marker2 = markers.replacen("?", ".", 1);
        let mut vec1 = get_options(&marker1);
        let mut vec2 = get_options(&marker2);
        vec1.append(&mut vec2);
        vec1
    }
}

fn main() {
    rayon::ThreadPoolBuilder::new().num_threads(12).build_global().unwrap();

    let args = Args::parse();

    let contents = fs::read_to_string(&args.input)
        .expect("Should have been able to read the file");
    // In part 1 we add 1 one row/column for each empty one.
    // In other words multiply amount of empty space by 2
    //let res1 = read_contents(&contents, 1);
    //let res1 = read_contents_conc(&contents, 1);
    //println!("Part 1 answer is {}", res1);

    let res2 = read_contents_conc(&contents, 5);
    println!("Part 2 answer is {}", res2);
}


#[derive(Debug)]
enum RetType {
    Type1(Field),
    Type2(Vec<i64>),
}

fn read_line(input: &str, repeat: usize) -> i64 {
    if input.parse::<i64>().is_ok()  {
        return input.parse::<i64>().unwrap();
    }

    let (field, mut counts) = match input.split_whitespace().with_position().map(|(p,v)| {
        match p {
            Position::First => {
                RetType::Type1(Field::new(&(0..repeat).map(|_| v).join("?"), true))
            },
            Position::Last => {
                RetType::Type2(v.split(",").map(|m| {m.parse::<i64>().unwrap()}).collect())
            }
            _ => panic!("Unknown position"),
        }
    }).collect_tuple().unwrap() {
            (RetType::Type1(x), RetType::Type2(y)) => (x,y),
            _ => panic!("Unknown type"),
        };

    let c = counts.clone();
    for _ in 0..(repeat-1) {
        counts.append(&mut c.clone());
    }
    // let options = field.get_options();
    // options.iter().filter(|m| { m == &&counts}).count() as i64
    field.get_options_alt(&counts)
}

fn read_contents_conc(cont: &str, repeat: usize) -> i64 {
    cont.lines().enumerate().collect::<Vec<_>>().par_iter().map(|(i, l)| {
        println!("{}", &l);
        let tmp = read_line(&l, repeat);
        println!("{} got {}", &l, tmp);
        tmp
    }).sum()
}

fn read_contents(cont: &str, repeat: usize) -> i64 {
    cont.lines().enumerate().map(|(_, l)| {
        //if i % 10 == 0 {
            //println!("{}", i);
        //}
        read_line(&l, repeat)}
    ).sum()
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn conts() {
        let a = "???.### 1,1,3
.??..??...?##. 1,1,3
?#?#?#?#?#?#?#? 1,3,1,6
????.#...#... 4,1,1
????.######..#####. 1,6,5
?###???????? 3,2,1";
        assert_eq!(read_contents(&a, 1), 21);
        assert_eq!(read_contents_conc(&a, 1), 21);
        assert_eq!(read_contents(&a, 5), 525152);
    }

    #[test]
    fn counts() {
        assert_eq!(get_counts(5, &vec![5]).unwrap(), 1);
        assert_eq!(get_counts(5, &vec![4]).unwrap(), 2);
        assert_eq!(get_counts(5, &vec![3]).unwrap(), 3);
        assert_eq!(get_counts(5, &vec![2]).unwrap(), 4);
        assert_eq!(get_counts(5, &vec![1]).unwrap(), 5);

        assert_eq!(get_counts(5, &vec![2,2]).unwrap(), 1);
        assert_eq!(get_counts(5, &vec![2,1]).unwrap(), 3);

        assert_eq!(get_counts(6, &vec![2,1,1]).unwrap(), 1); // No extra
        assert_eq!(get_counts(7, &vec![2,1,1]).unwrap(), 4); // 1 extra space
        assert_eq!(get_counts(8, &vec![2,2,1]).unwrap(), 4); // 1 extra space

        assert_eq!(get_counts(5, &vec![1,1]).unwrap(), 6); // 2 extra space
        assert_eq!(get_counts(6, &vec![1,1]).unwrap(), 10); // 2 extra space
        assert_eq!(get_counts(7, &vec![1,1]).unwrap(), 15); // 4 extra space
        // 1 for lefternmost, 2+1 for second, 1+2+3 for third position
        assert_eq!(get_counts(7, &vec![1,1,1]).unwrap(), 12); // 2 extra space
        //assert_eq!(get_counts(8, &vec![1,1,1]).unwrap(), 12); // 2 extra space
        // 3 groups, 3 extra space => 9
        // First moves: 3 options
        // Second moves: 1, 2 or 3 options
        // Third moves: 1, 2 or 3 options
        //
        // 1 + (1+2) + (1+2+3) = 12
        //  xx.x.x... no moves -> 1 option
        //
        //  xx.x..x.. 1 move -> Ng options (Ng = 3)
        //  xx..x.x.. 
        //  .xx.x.x.. 
        //
        //  xx.x...x. 2 move -> 
        //  xx..x..x. 
        //  .xx.x..x. 
        //  xx...x.x. 
        //  .xx..x.x. 
        //  ..xx.x.x. 
    }

    #[test]
    fn field_empty() {
        let f = Field::new("......", true);
        let counts: Vec<i64> = vec![];
        assert_eq!(f.get_options_alt(&counts), 1);
    }
//
    #[test]
    fn field_ready() {
        let f = Field::new("...###", true);
        let counts: Vec<i64> = vec![3];
        assert_eq!(f.get_options_alt(&counts), 1);
    }

    #[test]
    fn field_simple() {
        let f = Field::new("...???", true);
        let counts: Vec<i64> = vec![3];
        assert_eq!(f.get_options_alt(&counts), 1);
        let counts: Vec<i64> = vec![1];
        assert_eq!(f.get_options_alt(&counts), 3);
    }

    #[test]
    fn field1() {
        let f = Field::new("??", true);
        let counts: Vec<i64> = vec![1];
        assert_eq!(f.get_options_alt(&counts), 2);
    }

    #[test]
    fn field() {
        let f = Field::new("??..??", true);
        let counts: Vec<i64> = vec![1,1];
        assert_eq!(f.get_options_alt(&counts), 4);
    }

    #[test]
    fn field2() {
        let f = Field::new("###????", true);
        let counts: Vec<i64> = vec![3,2];
        assert_eq!(f.get_options_alt(&counts), 2);

        let f = Field::new("?###????", true);
        let counts: Vec<i64> = vec![3,2];
        assert_eq!(f.get_options_alt(&counts), 2);

        let f = Field::new("?????", true);
        let counts: Vec<i64> = vec![2,1];
        assert_eq!(f.get_options_alt(&counts), 3);

        let f = Field::new("?###??????", true);
        let counts: Vec<i64> = vec![3,2,1];
        assert_eq!(f.get_options_alt(&counts), 3);
    }

    #[test]
    fn line(){
        assert_eq!(read_line("###.### 3,3"            ,1), 1);

        assert_eq!(read_line("???.### 1,1,3"            ,1), 1);
        assert_eq!(read_line(".??..??...?##. 1,1,3"     ,1), 4);
        assert_eq!(read_line("?#?#?#?#?#?#?#? 1,3,1,6"  ,1), 1);
        assert_eq!(read_line("????.#...#... 4,1,1 "     ,1), 1);
        assert_eq!(read_line("????.######..#####. 1,6,5",1), 4);
        assert_eq!(read_line("?###???????? 3,2,1 "      ,1),10);

        //assert_eq!(read_line("..???#??.?????? 4,3",      5), 10);
        //assert_eq!(read_line("##??#??#?..??? 9,1,1",     5), 10);

        //assert_eq!(read_line("???.###????.###????.###????.###????.### 1,1,3,1,1,3,1,1,3,1,1,3,1,1,3", 1), 1);
        assert_eq!(read_line("???.### 1,1,3"            ,5), 1);
        //assert_eq!(read_line(".??..??...?##.?.??..??...?##.?.??..??...?##.?.??..??...?##.?.??..??... 1,1,3,1,1,3,1,1,3,1,1,3,1,1", 1), 16384);

        assert_eq!(read_line(".##.?.??.??.?##.?.??.??.?##.?.??.??.?##.?.??.??. 3,1,1,3,1,1,3,1,1,3,1,1", 1), 0);

        assert_eq!(read_line("?.??.?? 1,1", 1), 8);
        assert_eq!(read_line("?##.?.??.?? 3,1,1", 1), 8);
        assert_eq!(read_line("??.?##.?.??.??. 1,3,1,1", 1), 16);

        assert_eq!(read_line(".#.??.?##.?.??.??. 1,1,3,1,1", 1), 16);

        assert_eq!(read_line("...#?.?##.?.??.??. 1,1,3,1,1", 1), 0);

        assert_eq!(read_line(".......##.?.??.??. 1,1,3,1,1", 1), 0);

        assert_eq!(read_line("###.?.??.??. 1,1,3,1,1", 1), 0);
        // Min len would be 1 + 1 + 3 + 1 + 1 +4 = 11

        assert_eq!(read_line("......?##.?.??.??. 1,1,3,1,1", 1), 0);
        assert_eq!(read_line("....#.?##.?.??.??. 1,1,3,1,1", 1), 0);

        assert_eq!(read_line("....?.?##.?.??.??. 1,1,3,1,1", 1), 0);
        assert_eq!(read_line("...??.?##.?.??.??. 1,1,3,1,1", 1), 0);

        assert_eq!(read_line("#?.??.?##.?.??.??. 1,1,3,1,1", 1), 16);
        assert_eq!(read_line(".?.??.?##.?.??.??. 1,1,3,1,1", 1), 16);

        assert_eq!(read_line("??.??.?##.?.??.??. 1,1,3,1,1", 1), 32);
        assert_eq!(read_line("..??.??.?##.?.??.??. 1,1,3,1,1", 1), 32);
        assert_eq!(read_line("#.??.??.?##.?.??.??. 1,1,3,1,1", 1), 32);
        assert_eq!(read_line("..??.??.?##.?.??.??. 1,1,3,1,1", 1) +
                   read_line("#.??.??.?##.?.??.??. 1,1,3,1,1", 1),
            64);

        assert_eq!(read_line("?##.?.??.??.?##.?.??.??.?##.?.??.??.?##.?.??.??. 3,1,1,3,1,1,3,1,1,3,1,1", 1), 16384 / 4);

        assert_eq!(read_line(".??..??...?##.?.??..??...?##.?.??..??...?##.?.??..??...?##.?.??..??...?##. 1,1,3,1,1,3,1,1,3,1,1,3,1,1,3", 1), 16384); // should be 16384

        assert_eq!(read_line(".??..??...?##. 1,1,3"     ,5), 16384);
        assert_eq!(read_line("?#?#?#?#?#?#?#? 1,3,1,6"  ,5), 1);
        assert_eq!(read_line("????.#...#... 4,1,1 "     ,5), 16);
        assert_eq!(read_line("????.######..#####. 1,6,5",5), 2500);
        assert_eq!(read_line("?###???????? 3,2,1 "      ,5), 506250);
    }

    #[test]
    // Total answer should be 7843
    fn part1() {
        assert_eq!(read_line("#??##??##? 6", 1), 0);
        assert_eq!(read_line("???##??##? 6", 1), 1);


        assert_eq!(1,read_line("#####??.#?.? 6,2", 1));
        assert_eq!(1,read_line("##?##?#??.#? 2,4,1,1", 1));
        assert_eq!(1,read_line("##?.?.#??##??#?? 2,1,9", 1));
        assert_eq!(1,read_line("##??#??#?..??? 9,1,1", 1));
        assert_eq!(1,read_line("##??#??#?.?#..? 3,1,3,2,1", 1));
        assert_eq!(1,read_line("##????#?#.##?# 4,3,4", 1));
        assert_eq!(1,read_line("##????.?#. 4,1,1", 1));
        assert_eq!(1,read_line("#.####???#??#?..? 1,12", 1));
        assert_eq!(1,read_line("#.#??#??.?#.# 1,6,1,1", 1));
        assert_eq!(1,read_line("#..#?#?.?????#.# 1,1,2,5,1", 1));
        assert_eq!(1,read_line("#...?##??#? 1,7", 1));
        assert_eq!(1,read_line("#.??????#?.?# 1,1,6,1", 1));
        assert_eq!(1,read_line("#?##???.?#????..?. 6,6,1", 1));
        assert_eq!(1,read_line("#?#..#?..##?. 1,1,2,2", 1));
        assert_eq!(1,read_line("#?#?#?#????. 3,7", 1));
        assert_eq!(1,read_line("#?#??.?#???.#. 5,3,1,1", 1));
        assert_eq!(1,read_line("#?#???##??#??? 9,1", 1));
        assert_eq!(1,read_line("#?#???????#?#????. 1,1,6,1,1,1", 1));
        assert_eq!(1,read_line("#?.?#????#?? 1,4,2,1", 1));
        assert_eq!(1,read_line("#??##..#.. 5,1", 1));
        assert_eq!(1,read_line("#??#?#??..???.? 2,1,3,3", 1));
        assert_eq!(1,read_line("#??#???.?#??##?##? 2,2,1,5,3", 1));
        assert_eq!(1,read_line("#??.#?#?##??. 2,1,6", 1));
        assert_eq!(1,read_line("#??.????#.?#? 1,3,1,1", 1));
        assert_eq!(1,read_line("#???##???#??.?. 6,2,1,1", 1));
        assert_eq!(1,read_line("#???#.???# 2,1,2", 1));
        assert_eq!(1,read_line("#???#?##???#?#???.#? 2,2,6,2,1,1", 1));
        assert_eq!(1,read_line("#???#?????.????#..? 5,5", 1));
        assert_eq!(1,read_line("#??????.#. 4,2,1", 1));
        assert_eq!(1,read_line(".###?#.?????# 5,1,4", 1));
        assert_eq!(1,read_line(".##?#.#???.??? 4,3,1,1", 1));
        assert_eq!(1,read_line(".##???##?..#??? 7,1", 1));
        assert_eq!(1,read_line(".##???#.#?##??.???# 2,1,5,4", 1));
        assert_eq!(1,read_line(".#.##????.#?#??#?. 1,5,1,4", 1));
        assert_eq!(1,read_line(".#.#????#?#.??? 1,1,5,1,1", 1));
        assert_eq!(1,read_line(".#.??#..?#? 1,2,1", 1));
        assert_eq!(1,read_line(".#?#?.???#.# 4,4,1", 1));
        assert_eq!(1,read_line(".#?.????##? 1,2", 1));
        assert_eq!(1,read_line(".#??##????#??????#? 12,5", 1));
        assert_eq!(1,read_line(".#??#.#?????#?#??? 4,10,1", 1));
        assert_eq!(1,read_line(".#??#??#?? 4,1", 1));
        assert_eq!(1,read_line(".#??.?#.?#.#???#?.? 3,2,1,3,2,1", 1));
        assert_eq!(1,read_line(".#???#??????##. 1,1,4,4", 1));
        assert_eq!(1,read_line(".#???.???##?????##?# 4,14", 1));
        assert_eq!(1,read_line(".#????#?#??? 1,2,1", 1));
        assert_eq!(1,read_line(".#????#?#???#?# 1,2,3,5", 1));
        assert_eq!(1,read_line(".#?????.#???#? 3,1,4", 1));
        assert_eq!(1,read_line("..##?#?#??? 2,6", 1));
        assert_eq!(1,read_line("....#?#?????????# 9,2", 1));
        assert_eq!(1,read_line("..?##???????#??..? 4,1,6,1", 1));
        assert_eq!(1,read_line("..?#.?#????.#? 2,6,1", 1));
        assert_eq!(1,read_line("..?#?#?..#.???? 5,1", 1));
        assert_eq!(1,read_line("..?#???#???##??. 8,4", 1));
        assert_eq!(1,read_line("..?.?#?##.?#????#?# 5,8", 1));
        assert_eq!(1,read_line(".?#?#????#. 2,6", 1));
        assert_eq!(1,read_line(".?#?.???##??##? 3,6", 1));
        assert_eq!(1,read_line(".?#???#???????.#??# 1,1,2,3,1,4", 1));
        assert_eq!(1,read_line(".?#?????##?.#?? 6,2,3", 1));
        assert_eq!(1,read_line(".?.#?#?.?## 3,2", 1));
        assert_eq!(1,read_line(".?.#?..#??.#? 1,1,3,1", 1));
        assert_eq!(1,read_line(".?.????.?..??#???# 2,1,1,1,1,2", 1));
        assert_eq!(1,read_line(".??##???#?##? 1,10", 1));
        assert_eq!(1,read_line(".??##????#??#?? 12,1", 1));
        assert_eq!(1,read_line(".??#..?#??.??? 1,1,4", 1));
        assert_eq!(1,read_line(".??#?##??????..#?#. 3,4,1,1,1,1", 1));
        assert_eq!(1,read_line(".??.??#.#?? 2,2,1", 1));
        assert_eq!(1,read_line(".???##..?.#??## 4,5", 1));
        assert_eq!(1,read_line(".???##?#?????? 2,9", 1));
        assert_eq!(1,read_line(".???##???. 2,4", 1));
        assert_eq!(1,read_line(".???#?..#?#??. 5,3", 1));
        assert_eq!(1,read_line(".???.??.#??# 3,4", 1));
        assert_eq!(1,read_line(".????##..?# 6,1", 1));
        assert_eq!(1,read_line(".????#?#????#.#?.. 10,1", 1));
        assert_eq!(1,read_line(".??????.??#?#.??# 6,3,1,3", 1));
        assert_eq!(1,read_line(".????????# 1,7", 1));
        assert_eq!(1,read_line("?####.???? 4,4", 1));
        assert_eq!(1,read_line("?####?#?.??.??.#?? 6,3", 1));
        assert_eq!(1,read_line("?##?#.????#?#??#??? 3,1,2,2,5", 1));
        assert_eq!(1,read_line("?#.#..?##?????? 1,1,7,1", 1));
        assert_eq!(1,read_line("?#.#?#?.?? 1,1,2", 1));
        assert_eq!(1,read_line("?#.#????.??.?#..??#? 1,5,2,1,4", 1));
        assert_eq!(1,read_line("?#..????#???# 1,7", 1));
        assert_eq!(1,read_line("?#.?.#?#??#??# 1,1,9", 1));
        assert_eq!(1,read_line("?#.???#???#..?##?# 2,6,1,5", 1));
        assert_eq!(1,read_line("?#?#?.#???? 3,4", 1));
        assert_eq!(1,read_line("?#?.??????#?# 1,9", 1));
        assert_eq!(1,read_line("?#?.??????#??. 1,7,1", 1));
        assert_eq!(1,read_line("?#??##????#.?#? 9,1,1", 1));
        assert_eq!(1,read_line("?#??#??.???????#. 7,3", 1));
        assert_eq!(1,read_line("?.####?.?# 5,1", 1));
        assert_eq!(1,read_line("?.##?..?#?#? 3,1,1", 1));
        assert_eq!(1,read_line("?.#.?...#.?.? 1,1", 1));
        assert_eq!(1,read_line("?.#?.#?##????# 1,2,6,1", 1));
        assert_eq!(1,read_line("?.#??##?###.???. 1,1,7,1,1", 1));
        assert_eq!(1,read_line("?.#??.?##?.?? 2,4", 1));
        assert_eq!(1,read_line("?.#?????#??#.? 7,2", 1));
        assert_eq!(1,read_line("?..??#.????? 1,3,5", 1));
        assert_eq!(1,read_line("?..???????#??.?.?# 1,10,2", 1));
        assert_eq!(1,read_line("?.?##?#???.???. 1,2,1,2,3", 1));
        assert_eq!(1,read_line("?.?#..???????.? 2,7", 1));
        assert_eq!(1,read_line("?.?#?#???. 1,1,4", 1));
        assert_eq!(1,read_line("?.?#??#?.# 1,4,1", 1));
        assert_eq!(1,read_line("?.?#??.#.? 4,1,1", 1));
        assert_eq!(1,read_line("?.??#???#?##?##?#. 1,14", 1));
        assert_eq!(1,read_line("?.??????#???.#. 7,2,1", 1));
        assert_eq!(1,read_line("??###...##??? 3,3", 1));
        assert_eq!(1,read_line("??###.?.?? 4,1,2", 1));
        assert_eq!(1,read_line("??##.#?.?#??#.# 3,2,1,2,1", 1));
        assert_eq!(1,read_line("??##??.##??. 3,1,2,1", 1));
        assert_eq!(1,read_line("??#.?##?.#??#??.?.## 2,2,5,2", 1));
        assert_eq!(1,read_line("??#.?.?#.? 1,2", 1));
        assert_eq!(1,read_line("??#.???##??#?##?#?. 3,2,8", 1));
        assert_eq!(1,read_line("??#.?????.??? 2,5,1,1", 1));
        assert_eq!(1,read_line("??#?###?.?#. 5,1", 1));
        assert_eq!(1,read_line("??#?###????##..?? 13,2", 1));
        assert_eq!(1,read_line("??#?##?#?#?#??##??#? 6,3,5", 1));
        assert_eq!(1,read_line("??#?.#??#??????#??#. 1,14", 1));
        assert_eq!(1,read_line("??#?.????#????.?#?# 4,4,3,1,1", 1));
        assert_eq!(1,read_line("??#??#..#???? 4,3", 1));
        assert_eq!(1,read_line("??#??#??#?##?? 2,10", 1));
        assert_eq!(1,read_line("??#???#??? 5,3", 1));
        assert_eq!(1,read_line("??..#??????#??? 1,1", 1));
        assert_eq!(1,read_line("???#?##?##?.??#??#. 2,1,6,5", 1));
        assert_eq!(1,read_line("???#?##??? 4,4", 1));
        assert_eq!(1,read_line("???#?#???##?.?#?.? 2,4,4,3", 1));
        assert_eq!(1,read_line("???#?#???.???????. 1,2,1,2,3,3", 1));
        assert_eq!(1,read_line("???.##??.#????#?.? 3,2,1,2,1,2", 1));
        assert_eq!(1,read_line("???.#..???#????. 3,1,8", 1));
        assert_eq!(1,read_line("????##?#?# 4,3", 1));
        assert_eq!(1,read_line("????#?#.??#?.. 4,4", 1));
        assert_eq!(1,read_line("????#??..#? 5,1,1", 1));
        assert_eq!(1,read_line("????.#?#?#.?#? 2,1,5,1", 1));
        assert_eq!(1,read_line("?????#.???#??#?#... 5,3,4", 1));
        assert_eq!(1,read_line("?????#??#???.??# 5,3,1,1,1", 1));
        assert_eq!(1,read_line("?????#????. 3,6", 1));
        assert_eq!(1,read_line("??????##?#?#?#????#? 1,1,1,6,6", 1));
        assert_eq!(1,read_line("??????##?.#. 2,1,4,1", 1));
        assert_eq!(1,read_line("??????##???. 1,1,7", 1));
        assert_eq!(1,read_line("??????#?.?..#.?..? 1,6,1,1,1,1", 1));
        assert_eq!(1,read_line("?????????#???#??##. 1,1,1,1,7,2", 1));
        assert_eq!(10,read_line("#?#??.#??#?#???.?? 1,1,1,4,1,1", 1));
        assert_eq!(10,read_line(".#.?#???#???????.??? 1,9,1,2", 1));
        assert_eq!(10,read_line(".#?.????????..#? 1,1,1,2,1", 1));
        assert_eq!(10,read_line("..??#?.????#???? 3,5", 1));
        assert_eq!(10,read_line(".?#???.?#???????#?. 3,2,1,1,3", 1));
        assert_eq!(10,read_line(".?.?.????. 1,1,1", 1));
        assert_eq!(10,read_line(".??????????#?. 1,3,1,1", 1));
        assert_eq!(10,read_line("?##?.?.?#???? 3,2,1", 1));
        assert_eq!(10,read_line("?#?.?????#??? 3,1,4", 1));
        assert_eq!(10,read_line("?.?.????#??? 1,1,5", 1));
        assert_eq!(10,read_line("?.?.?????.? 1,1,2", 1));
        assert_eq!(10,read_line("?.?.????????#???. 4,4", 1));
        assert_eq!(10,read_line("?.??.#??#??##?????.# 1,2,1,3,3,1", 1));
        assert_eq!(10,read_line("?.???.???.. 1,2", 1));
        assert_eq!(10,read_line("?.?????#?????? 6,2", 1));
        assert_eq!(10,read_line("?.??????.??? 4,1", 1));
        assert_eq!(10,read_line("??###???????????? 3,2,3,2", 1));
        assert_eq!(10,read_line("??#.?.????.? 3,1,1,1", 1));
        assert_eq!(10,read_line("??.??????##?????.? 1,1,1,6,1,1", 1));
        assert_eq!(10,read_line("???###???????????# 8,3,1,1", 1));
        assert_eq!(10,read_line("???.???#??#???..?? 1,8", 1));
        assert_eq!(10,read_line("????#?.##??????? 1,2,6,1", 1));
        assert_eq!(10,read_line("????#??#??????..#?? 1,3,2,3,1,1", 1));
        assert_eq!(10,read_line("????#?????...??..?. 1,1", 1));
        assert_eq!(10,read_line("?????###????#? 1,6,1", 1));
        assert_eq!(10,read_line("?????#?.?? 2,2,1", 1));
        assert_eq!(10,read_line("?????#????.?#?.?? 6,2", 1));
        assert_eq!(10,read_line("?????.#?#?#??..?? 1,1,4,1", 1));
        assert_eq!(10,read_line("?????..????????##?? 1,11", 1));
        assert_eq!(10,read_line("??????#??#?.?# 2,2,2,1", 1));
        assert_eq!(10,read_line("??????#????????? 9,3", 1));
        assert_eq!(10,read_line("??????.#.???#????? 2,1,8", 1));
        assert_eq!(10,read_line("??????.#????# 1,1,4,1", 1));
        assert_eq!(10,read_line("??????????###?#?? 2,3,3,1,1", 1));
        assert_eq!(10,read_line("???????????? 1,2,5", 1));
        assert_eq!(10,read_line("???????????? 1,6,1", 1));
        assert_eq!(106,read_line("????.????????????. 2,3,1,1,1", 1));
        assert_eq!(11,read_line("##???#?#?????##??? 3,4,1,3,1", 1));
        assert_eq!(11,read_line(".....??#??.?.???? 2,1", 1));
        assert_eq!(11,read_line("...???????#?#?.??? 1,4", 1));
        assert_eq!(11,read_line("..?#??#??????.??.??? 9,1,1,1", 1));
        assert_eq!(11,read_line(".??..?????. 1,2", 1));
        assert_eq!(11,read_line("??##????.????##? 4,1,1,1,3", 1));
        assert_eq!(11,read_line("???#?#??????? 1,4,3", 1));
        assert_eq!(11,read_line("?????????#?? 1,4,1", 1));
        assert_eq!(11,read_line("?????????#??#? 1,7", 1));
        assert_eq!(12,read_line("#???#?????.??? 1,3,2,2", 1));
        assert_eq!(12,read_line("..???#??.?????? 4,3", 1));
        assert_eq!(12,read_line(".??#?#??#.??????.#? 5,1,1,2,2", 1));
        assert_eq!(12,read_line(".???.?#??????. 1,1,3", 1));
        assert_eq!(12,read_line(".???.?????.??? 1,4,2", 1));
        assert_eq!(12,read_line("?####?###?#??#.????? 11,1,1,1", 1));
        assert_eq!(12,read_line("?#???#??##????.??? 6,3,2,1", 1));
        assert_eq!(12,read_line("?.????#?.??#??????? 6,4,1", 1));
        assert_eq!(12,read_line("?.?????#.#.? 1,1,1,1", 1));
        assert_eq!(12,read_line("?.?????#..? 1,1,1", 1));
        assert_eq!(12,read_line("??##???????? 5,2", 1));
        assert_eq!(12,read_line("??#????#????#? 2,3,2", 1));
        assert_eq!(12,read_line("??.##??.?????????? 1,3,3,4", 1));
        assert_eq!(12,read_line("??.?##?#?????.??.??# 1,7,1,1,2", 1));
        assert_eq!(12,read_line("??.??##????????.???# 8,1,1", 1));
        assert_eq!(12,read_line("???#??.??????? 1,3,4", 1));
        assert_eq!(12,read_line("???..???##?????#?? 1,10", 1));
        assert_eq!(12,read_line("???.??#?###..?.??? 1,7,1,1", 1));
        assert_eq!(12,read_line("????#?..?????.? 4,1", 1));
        assert_eq!(12,read_line("????.??#??.???##??? 1,1,1,6,1", 1));
        assert_eq!(12,read_line("?????#???#??#???#? 1,1,3,1,3,2", 1));
        assert_eq!(12,read_line("???????.?? 2,2", 1));
        assert_eq!(12,read_line("???????.??. 2,2", 1));
        assert_eq!(12,read_line("????????.?.??.?.? 3,2", 1));
        assert_eq!(126,read_line("????????????????? 3,2,2,1,1", 1));
        assert_eq!(13,read_line(".#?????.???..?? 1,1,1,1,2", 1));
        assert_eq!(13,read_line(".????.???##?? 1,5", 1));
        assert_eq!(13,read_line("?#????????#.??. 1,2,1,1,1", 1));
        assert_eq!(13,read_line("??#.?#?????.? 1,1,2,1", 1));
        assert_eq!(13,read_line("???..????. 1,1,1", 1));
        assert_eq!(13,read_line("???.??.???.#?? 1,2,2", 1));
        assert_eq!(13,read_line("???.????????.? 1,6,1", 1));
        assert_eq!(13,read_line("????.???????#? 2,1,3,1", 1));
        assert_eq!(13,read_line("?????.???? 3,1", 1));
        assert_eq!(13,read_line("???????#??.???.??#.. 4,2,1,1,1,1", 1));
        assert_eq!(13,read_line("???????????.#???#??? 5,1,1,1,1,4", 1));
        assert_eq!(14,read_line("#??????#????.?.. 1,1,5,1", 1));
        assert_eq!(14,read_line(".????.??#?????.??. 3,6,1", 1));
        assert_eq!(14,read_line("?#?????#?.?..?.??#? 2,1,1,1,1,3", 1));
        assert_eq!(14,read_line("?#????????????? 4,1,4,1", 1));
        assert_eq!(14,read_line("?..??????? 1,1,2", 1));
        assert_eq!(14,read_line("?.???#????????# 5,1,1", 1));
        assert_eq!(14,read_line("?.?????#??????? 1,1,7", 1));
        assert_eq!(14,read_line("??#?????????????##?? 2,5,3,4", 1));
        assert_eq!(14,read_line("???.?????.?. 2,1,1,1", 1));
        assert_eq!(14,read_line("????#??????.?.?.# 1,6,1,1,1", 1));
        assert_eq!(14,read_line("????????.???# 1,3,1,2", 1));
        assert_eq!(15,read_line("##?????????? 2,1,3", 1));
        assert_eq!(15,read_line("#??.??????? 3,1,1", 1));
        assert_eq!(15,read_line("#?????????#??????.?# 1,1,1,7,1,1", 1));
        assert_eq!(15,read_line(".#.????????? 1,2,2", 1));
        assert_eq!(15,read_line("..???#???????? 2,2,1,1", 1));
        assert_eq!(15,read_line(".?.??????????#????#? 1,1,2,7,2", 1));
        assert_eq!(15,read_line("?.?#.??.??#???? 1,1,1,3,1", 1));
        assert_eq!(15,read_line("??#??????? 3,1", 1));
        assert_eq!(15,read_line("??.#???#.?????..?.# 1,2,2,2,1,1", 1));
        assert_eq!(15,read_line("?????####??#???? 1,6,1,1", 1));
        assert_eq!(15,read_line("???????.?#??#??###. 1,1,10", 1));
        assert_eq!(15,read_line("??????????? 1,5", 1));
        assert_eq!(15,read_line("???????????? 3,1,1,2", 1));
        assert_eq!(16,read_line("#.???????##?. 1,1,1,3", 1));
        assert_eq!(16,read_line("#????.???? 1,1,1", 1));
        assert_eq!(16,read_line(".?#??????? 2,1,1", 1));
        assert_eq!(16,read_line(".?.??????.?##??#?? 1,1,4,2", 1));
        assert_eq!(16,read_line("?#???????? 2,2,1", 1));
        assert_eq!(16,read_line("?.????.????#?? 1,1,1,5", 1));
        assert_eq!(16,read_line("??.?????#?#???????? 1,12", 1));
        assert_eq!(16,read_line("???#?????? 1,1,1", 1));
        assert_eq!(16,read_line("???#??????##?????? 1,3,6", 1));
        assert_eq!(16,read_line("????.##???????#??? 1,3,1,4,1", 1));
        assert_eq!(16,read_line("????.#???? 1,1,1", 1));
        assert_eq!(16,read_line("????.?.??? 2,1,1", 1));
        assert_eq!(16,read_line("?????#????? 2,3,1", 1));
        assert_eq!(16,read_line("?????.?????#??. 2,1,1,2,1", 1));
        assert_eq!(16,read_line("??????.????#???#?#.? 3,5,1,1,1", 1));
        assert_eq!(17,read_line("###..??#.???.???.# 3,1,1,1,1,1", 1));
        assert_eq!(17,read_line("#?????.???.????#??? 2,2,5", 1));
        assert_eq!(17,read_line("?.#????????.? 1,3,1", 1));
        assert_eq!(17,read_line("?.?#????#????? 1,2,4,1", 1));
        assert_eq!(17,read_line("?.??????.??. 1,3,1", 1));
        assert_eq!(17,read_line("??.?????#????#?.? 1,4,1,2", 1));
        assert_eq!(17,read_line("??.???????. 2,1", 1));
        assert_eq!(17,read_line("???????#??????##. 1,3,2,1,2", 1));
        assert_eq!(17,read_line("???????????.#????? 7,2,1,1", 1));
        assert_eq!(18,read_line(".?###???????????.? 5,5,1", 1));
        assert_eq!(18,read_line(".?????.#?????????? 3,3,1,3", 1));
        assert_eq!(18,read_line("?.???#??????.?.?.?. 6,1", 1));
        assert_eq!(18,read_line("??#??.?#?.?????? 3,2,4", 1));
        assert_eq!(18,read_line("????##??????###?#.?? 1,5,5,1", 1));
        assert_eq!(18,read_line("????.#.???????? 2,1,2,3", 1));
        assert_eq!(18,read_line("????.??????.?.#???? 2,2,2,1,2,1", 1));
        assert_eq!(18,read_line("?????..??.#??????? 2,1,1,3,1,1", 1));
        assert_eq!(18,read_line("?????.?#??.? 1,1,1,1", 1));
        assert_eq!(18,read_line("??????????#??#?#??? 4,9", 1));
        assert_eq!(19,read_line("?.?????????#??#??. 2,1,7", 1));
        assert_eq!(19,read_line("???.????????? 1,3,3", 1));
        assert_eq!(19,read_line("????#???.??.?.? 5,1", 1));
        assert_eq!(19,read_line("?????##??????#? 2,3,1,3", 1));
        assert_eq!(19,read_line("??????#?.????? 3,1,2", 1));
        assert_eq!(2,read_line("###??#???.?#???### 4,1,1,8", 1));
        assert_eq!(2,read_line("###????#?.?.?????. 8,4", 1));
        assert_eq!(2,read_line("##.?#?#????.# 2,6,1", 1));
        assert_eq!(2,read_line("##?????####.???? 3,7,3", 1));
        assert_eq!(2,read_line("##??????#?? 5,2", 1));
        assert_eq!(2,read_line("#.#?#??#??##??#?? 1,1,8,3", 1));
        assert_eq!(2,read_line("#.#?.?#??.?????# 1,1,4,1,3", 1));
        assert_eq!(2,read_line("#.??#??????#??#? 1,13", 1));
        assert_eq!(2,read_line("#.???.?.??#??#? 1,2,1,1,5", 1));
        assert_eq!(2,read_line("#?##.??#??#? 4,3,1", 1));
        assert_eq!(2,read_line("#?#?#.###???#?.??? 1,3,3,1,2,2", 1));
        assert_eq!(2,read_line("#?#??##?.?###????#. 3,2,4,2", 1));
        assert_eq!(2,read_line("#?#???.?#??# 3,1,3,1", 1));
        assert_eq!(2,read_line("#?..?#???##??#?????? 2,13", 1));
        assert_eq!(2,read_line("#?.?????#??#?#?#? 1,13", 1));
        assert_eq!(2,read_line("#??##.?#?#??#???.? 5,1,4,1,1", 1));
        assert_eq!(2,read_line("#??#??????? 6,3", 1));
        assert_eq!(2,read_line("#???#??##??###?.?.# 5,8,1", 1));
        assert_eq!(2,read_line("#???.###???? 1,2,3,2", 1));
        assert_eq!(2,read_line("#????#??###?#??..# 1,9,1", 1));
        assert_eq!(2,read_line("#????#?????#?????#? 1,1,1,12", 1));
        assert_eq!(2,read_line("#????.?##???. 4,4", 1));
        assert_eq!(2,read_line("#?????##???#?.#??# 1,10,1,1", 1));
        assert_eq!(2,read_line("#?????#?#?#??#??#? 2,1,11", 1));
        assert_eq!(2,read_line("#??????#??#?#?.#?. 1,3,1,2,2,1", 1));
        assert_eq!(2,read_line("#??????.??#????# 6,4,2", 1));
        assert_eq!(2,read_line("#????????# 1,3,3", 1));
        assert_eq!(2,read_line(".###????.?? 6,1", 1));
        assert_eq!(2,read_line(".#.?.??.????### 1,1,1,6", 1));
        assert_eq!(2,read_line(".#??##???#??#??? 1,9,1", 1));
        assert_eq!(2,read_line(".#????#.?##?#??? 1,2,2,1,1", 1));
        assert_eq!(2,read_line(".#????#??##?? 3,6", 1));
        assert_eq!(2,read_line(".#????.?????#??? 1,2,6,2", 1));
        assert_eq!(2,read_line(".#?????.??...#. 1,2,1,1,1", 1));
        assert_eq!(2,read_line(".#??????#?#.? 1,1,5", 1));
        assert_eq!(2,read_line("..?##?.?.????? 4,4", 1));
        assert_eq!(2,read_line("..?#?#????###?.?.? 10,1", 1));
        assert_eq!(2,read_line("..?#??.??#?.?##???. 4,1,5", 1));
        assert_eq!(2,read_line("..??#??##?#?.? 3,4", 1));
        assert_eq!(2,read_line("..??...?#######.. 1,8", 1));
        assert_eq!(2,read_line("..???#?#??# 5,1", 1));
        assert_eq!(2,read_line("..????##???#?????#?# 4,10", 1));
        assert_eq!(2,read_line(".?#####?#?#????#. 12,1", 1));
        assert_eq!(2,read_line(".?###.???# 3,1,1", 1));
        assert_eq!(2,read_line(".?##.?#????.? 3,5", 1));
        assert_eq!(2,read_line(".?##??.##?#?#?? 3,6", 1));
        assert_eq!(2,read_line(".?#.#??##??? 2,5,1", 1));
        assert_eq!(2,read_line(".?#.?#?#?? 1,4", 1));
        assert_eq!(2,read_line(".?#?#???#?? 3,2", 1));
        assert_eq!(2,read_line(".?#?#????#?#??.#?#? 6,3,3", 1));
        assert_eq!(2,read_line(".?#?.??#??.????#?? 2,5,7", 1));
        assert_eq!(2,read_line(".?#??#?.?.??? 1,1,1,2", 1));
        assert_eq!(2,read_line(".?#??.?###???## 3,3,2", 1));
        assert_eq!(2,read_line(".?#???#?????# 2,1,5", 1));
        assert_eq!(2,read_line(".?#?????????.??##??? 1,4,3,6", 1));
        assert_eq!(2,read_line(".?.#???????. 1,5,1", 1));
        assert_eq!(2,read_line(".?..#??#?? 1,2", 1));
        assert_eq!(2,read_line(".?.??#??????##?. 7,2", 1));
        assert_eq!(2,read_line(".??#..?#?. 3,2", 1));
        assert_eq!(2,read_line(".??#???????.??? 3,4,1,2", 1));
        assert_eq!(2,read_line(".???###?.#??#????. 4,6", 1));
        assert_eq!(2,read_line(".???##.??#?. 4,2", 1));
        assert_eq!(2,read_line(".???#??#??#?.#?. 10,1", 1));
        assert_eq!(2,read_line(".????##????..#??? 8,1,1,1", 1));
        assert_eq!(2,read_line(".????#?##??#. 8,1", 1));
        assert_eq!(2,read_line(".????#?##????#?#.?? 1,3,3,5,1", 1));
        assert_eq!(2,read_line(".????#??#?#?##??# 12,1", 1));
        assert_eq!(2,read_line(".????#??#?? 1,2,4", 1));
        assert_eq!(2,read_line(".????..??. 4,1", 1));
        assert_eq!(2,read_line(".????.?.?? 3,2", 1));
        assert_eq!(2,read_line(".????.?.?????###???? 3,1,12", 1));
        assert_eq!(2,read_line(".?????#?##??.????#? 10,6", 1));
        assert_eq!(2,read_line(".??????#??#???? 5,6", 1));
        assert_eq!(2,read_line(".????????.?.??.? 7,2", 1));
        assert_eq!(2,read_line("?###??#????#?.#??# 6,3,1,1", 1));
        assert_eq!(2,read_line("?##?#?..## 5,2", 1));
        assert_eq!(2,read_line("?##??##???.??.?#? 3,4,1,2,2", 1));
        assert_eq!(2,read_line("?##??#??#?#??.???? 13,3", 1));
        assert_eq!(2,read_line("?##???.?.. 5,1", 1));
        assert_eq!(2,read_line("?#.#?##?#???? 1,7,1", 1));
        assert_eq!(2,read_line("?#..?.?????#.? 1,1,2,2", 1));
        assert_eq!(2,read_line("?#?###????##?#??.# 15,1", 1));
        assert_eq!(2,read_line("?#?##?#??????# 1,6,1,1", 1));
        assert_eq!(2,read_line("?#?#?#??.#????? 1,5,3,1", 1));
        assert_eq!(2,read_line("?#?#?.#??????. 4,1,2,2", 1));
        assert_eq!(2,read_line("?#?#?.?#????? 1,2,1,3", 1));
        assert_eq!(2,read_line("?#?#??##??.?#?# 4,2,1,1,1", 1));
        assert_eq!(2,read_line("?#?.##??#???? 2,6", 1));
        assert_eq!(2,read_line("?#?...??#?. 2,1,2", 1));
        assert_eq!(2,read_line("?#?..?#.##?#.?.?#? 1,1,2,1,1,2", 1));
        assert_eq!(2,read_line("?#?.?#??#???????? 2,6,6", 1));
        assert_eq!(2,read_line("?#?.???????##.?#??. 2,8,4", 1));
        assert_eq!(2,read_line("?#??###???.? 1,6", 1));
        assert_eq!(2,read_line("?#??#.?###?#?? 2,1,8", 1));
        assert_eq!(2,read_line("?#??#??.?# 5,2", 1));
        assert_eq!(2,read_line("?#??#??.?#?? 6,2,1", 1));
        assert_eq!(2,read_line("?#??#?????.?#.#?# 1,4,2,3", 1));
        assert_eq!(2,read_line("?#??.#????#???#?.? 3,3,7", 1));
        assert_eq!(2,read_line("?#??..##?# 3,4", 1));
        assert_eq!(2,read_line("?#??..?#???.## 1,1,4,2", 1));
        assert_eq!(2,read_line("?#??.?#??#?## 2,3,1,2", 1));
        assert_eq!(2,read_line("?#??.?.?.#?????. 4,1,2,3", 1));
        assert_eq!(2,read_line("?#???##.????#?#???? 2,4,2,2,1,2", 1));
        assert_eq!(2,read_line("?#???...?? 4,2", 1));
        assert_eq!(2,read_line("?#???.?#.?#??. 1,2,1,3", 1));
        assert_eq!(2,read_line("?#????##?.??###?? 8,3,1", 1));
        assert_eq!(2,read_line("?#????#.?##??. 1,1,1,5", 1));
        assert_eq!(2,read_line("?#????.?##??..#?# 5,5,1,1", 1));
        assert_eq!(2,read_line("?#?????#??#??? 1,3,5", 1));
        assert_eq!(2,read_line("?#?????#???...#???? 10,4", 1));
        assert_eq!(2,read_line("?#??????#?#. 4,4", 1));
        assert_eq!(2,read_line("?#???????.?? 9,1", 1));
        assert_eq!(2,read_line("?.#?#?#.???#?. 3,1,2", 1));
        assert_eq!(2,read_line("?.#???.??##?#??#??# 1,1,1,1,10", 1));
        assert_eq!(2,read_line("?..?#####.??#? 6,3", 1));
        assert_eq!(2,read_line("?..?.#?..???##? 2,4", 1));
        assert_eq!(2,read_line("?.?#?????#?.#. 8,1", 1));
        assert_eq!(2,read_line("?.??#..?#???#?????? 3,9", 1));
        assert_eq!(2,read_line("?.??#?????? 1,8", 1));
        assert_eq!(2,read_line("?.???#???#.?#? 3,1,1,2", 1));
        assert_eq!(2,read_line("?.????#?.#?###. 5,5", 1));
        assert_eq!(2,read_line("??###???#.?. 3,1,1", 1));
        assert_eq!(2,read_line("??###?????#.????.??? 10,1,2,2", 1));
        assert_eq!(2,read_line("??##?.?#?#. 4,1,1", 1));
        assert_eq!(2,read_line("??##???#???#? 3,1,2,2", 1));
        assert_eq!(2,read_line("??#.?.??#????#???? 3,11", 1));
        assert_eq!(2,read_line("??#?#??#?#.?.??.?.# 7,1,1,1,1,1", 1));
        assert_eq!(2,read_line("??#?#??.?#?? 1,5,2", 1));
        assert_eq!(2,read_line("??#??#..?? 3,1", 1));
        assert_eq!(2,read_line("??#??#??##?.?? 4,3,2", 1));
        assert_eq!(2,read_line("??#??...?. 4,1", 1));
        assert_eq!(2,read_line("??#??.??????#?####. 1,1,1,1,9", 1));
        assert_eq!(2,read_line("??#???#????????.???# 1,6,1,4,1,1", 1));
        assert_eq!(2,read_line("??#???..?#. 2,1", 1));
        assert_eq!(2,read_line("??#??????#?#???#? 10,2", 1));
        assert_eq!(2,read_line("??.#.???#??# 1,1,4,2", 1));
        assert_eq!(2,read_line("??.#?????#??###??? 1,1,1,9,1", 1));
        assert_eq!(2,read_line("??....??????....? 5,1", 1));
        assert_eq!(2,read_line("??.?.?#??## 1,1,6", 1));
        assert_eq!(2,read_line("??.???##?#.? 1,6", 1));
        assert_eq!(2,read_line("??.???.??#?# 1,3,4", 1));
        assert_eq!(2,read_line("??.????.?.??. 3,2", 1));
        assert_eq!(2,read_line("??.?????.???.?? 3,1,3,1", 1));
        assert_eq!(2,read_line("??.???????# 1,6,1", 1));
        assert_eq!(2,read_line("??.?????????? 1,1,8", 1));
        assert_eq!(2,read_line("???##?##?.?.???.?. 4,2,1,2,1", 1));
        assert_eq!(2,read_line("???##??#....??. 2,5,1", 1));
        assert_eq!(2,read_line("???##??.#?#????####. 1,2,11", 1));
        assert_eq!(2,read_line("???##????# 6,2", 1));
        assert_eq!(2,read_line("???#..?.??####?##??? 1,11", 1));
        assert_eq!(2,read_line("???#.?.##???#??? 3,1,3,1,1", 1));
        assert_eq!(2,read_line("???#?#?#??#?.??? 4,1,2,1,2", 1));
        assert_eq!(2,read_line("???#?#?..?####??? 5,4", 1));
        assert_eq!(2,read_line("???#?#???????#???? 2,9,3", 1));
        assert_eq!(2,read_line("???#?.?.#?.? 4,1", 1));
        assert_eq!(2,read_line("???#?.??#?.???#?? 1,3,1,2,5", 1));
        assert_eq!(2,read_line("???#??#??#???#???. 1,1,3,8", 1));
        assert_eq!(2,read_line("???#??..???. 1,4,2", 1));
        assert_eq!(2,read_line("???#???.#??? 6,3", 1));
        assert_eq!(2,read_line("???#????#??#..?# 8,1,1", 1));
        assert_eq!(2,read_line("???.#.?.#?.?.??#?.. 1,2,2", 1));
        assert_eq!(2,read_line("???.#???#?## 2,1,2,2", 1));
        assert_eq!(2,read_line("???.#????.##?##???? 2,4,7", 1));
        assert_eq!(2,read_line("???...#?#???.? 2,5", 1));
        assert_eq!(2,read_line("???..?#.??.#. 3,2,1,1", 1));
        assert_eq!(2,read_line("???..??#?..? 2,4,1", 1));
        assert_eq!(2,read_line("???.???#?#????#?.#?# 1,1,8,1,1,1", 1));
        assert_eq!(2,read_line("????#?.?#.# 5,2,1", 1));
        assert_eq!(2,read_line("????#???#??#.?#.? 1,2,1,4,1", 1));
        assert_eq!(2,read_line("????.#?#???.?#????? 3,2", 1));
        assert_eq!(2,read_line("????.??#?#?# 3,1,5", 1));
        assert_eq!(2,read_line("?????#?.??##? 3,1,5", 1));
        assert_eq!(2,read_line("?????#???.?? 1,2,4,1", 1));
        assert_eq!(2,read_line("?????..?#??#??? 4,6,1", 1));
        assert_eq!(2,read_line("?????.??????. 2,2,5", 1));
        assert_eq!(2,read_line("??????#??.???#?? 9,5", 1));
        assert_eq!(2,read_line("???????#?###?#?? 6,7", 1));
        assert_eq!(2,read_line("???????#???#? 9,1", 1));
        assert_eq!(2,read_line("???????????##?#?.?? 1,2,1,3,5,1", 1));
        assert_eq!(20,read_line("..?.???#???.?? 1,1,1,1", 1));
        assert_eq!(20,read_line("??.?.??.??.?????# 1,1,1,5", 1));
        assert_eq!(20,read_line("?????.??????#.???? 1,6,1", 1));
        assert_eq!(20,read_line("????????.. 1,1,1", 1));
        assert_eq!(20,read_line("?????????#?#????? 1,1,10", 1));
        assert_eq!(21,read_line("?###..????????.?? 4,2,1,1,1", 1));
        assert_eq!(21,read_line("????#?????##??????? 1,2,9,1", 1));
        assert_eq!(22,read_line("??#?.?.?????? 3,1,2", 1));
        assert_eq!(22,read_line("???.????????. 1,1,2,2", 1));
        assert_eq!(23,read_line(".##???????????#???? 4,2,4,1", 1));
        assert_eq!(23,read_line("??#?????#????? 4,3,1", 1));
        assert_eq!(23,read_line("?????.?.?..??? 3,1,1,1", 1));
        assert_eq!(24,read_line(".?#?.?????????#???? 3,4,1,1,1", 1));
        assert_eq!(24,read_line("??#???.?.?#?.??? 4,1,2,1", 1));
        assert_eq!(24,read_line("??..?????? 1,1,1", 1));
        assert_eq!(24,read_line("??.?##?.???.?#? 1,3,1,2", 1));
        assert_eq!(24,read_line("??.?????????#?? 1,4", 1));
        assert_eq!(24,read_line("???.??#??#?#??.#.??? 1,1,6,1,1,1", 1));
        assert_eq!(24,read_line("????..?.?????..#??.. 1,2,1", 1));
        assert_eq!(24,read_line("?????#?#???..?????. 1,1,6,1,1", 1));
        assert_eq!(24,read_line("?????.???#?#?????? 1,6", 1));
        assert_eq!(24,read_line("??????#?#??????## 1,1,3,1,3", 1));
        assert_eq!(25,read_line(".?#???????? 2,1,1", 1));
        assert_eq!(25,read_line(".?????????#? 1,1,3", 1));
        assert_eq!(25,read_line(".?????????????#?.? 1,2,6", 1));
        assert_eq!(25,read_line("?.???????? 1,2,1", 1));
        assert_eq!(25,read_line("???????????#?#? 2,3,4", 1));
        assert_eq!(26,read_line("??.????.?.???? 2,2,1,1", 1));
        assert_eq!(27,read_line("??????.???? 2,1", 1));
        assert_eq!(28,read_line("???#.???.???.?#??# 1,1,1,1,3,1", 1));
        assert_eq!(28,read_line("????.??.??.# 1,1,1,1", 1));
        assert_eq!(29,read_line("?.????????? 1,2", 1));
        assert_eq!(3,read_line("#####?????#.???? 6,2,2", 1));
        assert_eq!(3,read_line("####?###????? 8,2", 1));
        assert_eq!(3,read_line("###..#.???#??#???# 3,1,1,6,1", 1));
        assert_eq!(3,read_line("###?.?.???.???.# 3,1,3,1,1", 1));
        assert_eq!(3,read_line("##?###?????????.? 9,1,2", 1));
        assert_eq!(3,read_line("##?#?.?#??#??#??? 4,4,2,1", 1));
        assert_eq!(3,read_line("##?.?#??#?????##??.# 2,8,4,1", 1));
        assert_eq!(3,read_line("##??#?#..#???.??? 7,1,2", 1));
        assert_eq!(3,read_line("##??.?.???#?. 4,1,3", 1));
        assert_eq!(3,read_line("##??.???.#?#?#? 4,1,1,1,1", 1));
        assert_eq!(3,read_line("#.##????????.?? 1,2,4,1,2", 1));
        assert_eq!(3,read_line("#.#??#?????##??##?? 1,1,1,1,9", 1));
        assert_eq!(3,read_line("#.#??????. 1,1,3", 1));
        assert_eq!(3,read_line("#..??#..??.???#?? 1,3,2,1,3", 1));
        assert_eq!(3,read_line("#.??#??#?? 1,2,2", 1));
        assert_eq!(3,read_line("#.???##?#???#???#??? 1,14", 1));
        assert_eq!(3,read_line("#?###?????????.##.? 9,1,1,2", 1));
        assert_eq!(3,read_line("#?##?#???#???? 4,1,2,2", 1));
        assert_eq!(3,read_line("#?#???.?.????? 1,1,2,3", 1));
        assert_eq!(3,read_line("#?.##?#??#??.?.??#.? 1,2,6,1,1,1", 1));
        assert_eq!(3,read_line("#?.?#?????????##?# 1,4,1,5,1", 1));
        assert_eq!(3,read_line("#??#.?.#???? 1,1,1,2", 1));
        assert_eq!(3,read_line("#??#????.?#.???????? 2,1,1,2,6,1", 1));
        assert_eq!(3,read_line("#???#?????????.??# 9,1,1,1,1", 1));
        assert_eq!(3,read_line("#????.#.#..?? 3,1,1,1", 1));
        assert_eq!(3,read_line("#??????#???###???? 1,1,1,7,1,1", 1));
        assert_eq!(3,read_line("#??????.?. 1,3", 1));
        assert_eq!(3,read_line(".##???#?????. 6,2", 1));
        assert_eq!(3,read_line(".#?##?.???????? 5,6", 1));
        assert_eq!(3,read_line(".#?.???????.? 2,5", 1));
        assert_eq!(3,read_line(".#??.????#?# 2,1,3", 1));
        assert_eq!(3,read_line(".#????????? 2,5", 1));
        assert_eq!(3,read_line("..##???##??? 2,5", 1));
        assert_eq!(3,read_line("...?#??.?.#??????##? 2,1,10", 1));
        assert_eq!(3,read_line("..?#???#?.. 2,3", 1));
        assert_eq!(3,read_line("..??#?????#. 3,3", 1));
        assert_eq!(3,read_line("..???????#???####. 1,11", 1));
        assert_eq!(3,read_line(".?##?##?????. 2,2,2", 1));
        assert_eq!(3,read_line(".?#.???.#. 1,1,1", 1));
        assert_eq!(3,read_line(".?#?##?????#???? 8,5", 1));
        assert_eq!(3,read_line(".?#?.???.#. 1,1,1", 1));
        assert_eq!(3,read_line(".?#??.#.#??? 2,1,1,2", 1));
        assert_eq!(3,read_line(".?.##??#??#?????? 8,3", 1));
        assert_eq!(3,read_line(".?...???????????#??? 2,11", 1));
        assert_eq!(3,read_line(".?.?#????.????# 3,2,1,1", 1));
        assert_eq!(3,read_line(".??#.#?#?????????# 2,5,1,3", 1));
        assert_eq!(3,read_line(".??#..???#????????? 2,11", 1));
        assert_eq!(3,read_line(".???#??#??# 1,5,1", 1));
        assert_eq!(3,read_line(".???.#??#? 1,2,2", 1));
        assert_eq!(3,read_line(".???.??#?..??. 1,4,2", 1));
        assert_eq!(3,read_line(".???.?????.? 1,2,2", 1));
        assert_eq!(3,read_line(".????..##????#? 1,1,7", 1));
        assert_eq!(3,read_line(".???????###?#??#?.## 5,6,1,2", 1));
        assert_eq!(3,read_line(".?????????. 3,4", 1));
        assert_eq!(3,read_line("?###?#.?.???##?? 5,5", 1));
        assert_eq!(3,read_line("?##?#???#??#??#??#?? 8,5,2", 1));
        assert_eq!(3,read_line("?##?#????#?? 7,2", 1));
        assert_eq!(3,read_line("?##?.????? 2,3", 1));
        assert_eq!(3,read_line("?##???#?#??????. 4,6", 1));
        assert_eq!(3,read_line("?##??????#??? 3,4,2", 1));
        assert_eq!(3,read_line("?#.#?#?#???? 1,3,1,1", 1));
        assert_eq!(3,read_line("?#.??.??##???.?#.? 1,4,2", 1));
        assert_eq!(3,read_line("?#.????.?#.##?#? 1,1,1,1,5", 1));
        assert_eq!(3,read_line("?#.??????#???????#? 1,10,1,1", 1));
        assert_eq!(3,read_line("?#?##...??####??.??# 4,6,3", 1));
        assert_eq!(3,read_line("?#?##.?.??. 4,1", 1));
        assert_eq!(3,read_line("?#?#...???.????##?? 1,1,3,1,2,1", 1));
        assert_eq!(3,read_line("?#?#?##?##.???? 2,7,1,1", 1));
        assert_eq!(3,read_line("?#?#??#???.???#???? 4,3,1", 1));
        assert_eq!(3,read_line("?#?#????.##?????#.? 3,1,5,1,1", 1));
        assert_eq!(3,read_line("?#?#????.??.????? 4,2,2,1,3", 1));
        assert_eq!(3,read_line("?#?.?##????? 1,4,2", 1));
        assert_eq!(3,read_line("?#??##?##???#???.?## 2,12,3", 1));
        assert_eq!(3,read_line("?#??##????. 6,2", 1));
        assert_eq!(3,read_line("?#??#?#??????## 2,4,5", 1));
        assert_eq!(3,read_line("?#???##??????? 1,8", 1));
        assert_eq!(3,read_line("?#????###? 4,4", 1));
        assert_eq!(3,read_line("?#????#?#?????. 1,9", 1));
        assert_eq!(3,read_line("?#????#???#?#??? 6,3,1", 1));
        assert_eq!(3,read_line("?#?????##?#????###. 2,2,4,5", 1));
        assert_eq!(3,read_line("?.#?????.??#. 3,1,1", 1));
        assert_eq!(3,read_line("?.?##?##????.??? 1,10,1", 1));
        assert_eq!(3,read_line("?.?#.?.??.#.#??? 2,1,1,3", 1));
        assert_eq!(3,read_line("?.?#???#?#???.???. 1,3,6,1,1", 1));
        assert_eq!(3,read_line("?.?#????????? 1,1,2,4", 1));
        assert_eq!(3,read_line("?.?.?..###??##??. 1,9", 1));
        assert_eq!(3,read_line("?.??#???#?#?#?.#. 1,10,1", 1));
        assert_eq!(3,read_line("?.????#?#? 1,6", 1));
        assert_eq!(3,read_line("?.????#???. 1,2,4", 1));
        assert_eq!(3,read_line("??#..?#???##?.#?# 3,3,3,3", 1));
        assert_eq!(3,read_line("??#.???#??? 1,3", 1));
        assert_eq!(3,read_line("??#.?????##?#?#?#? 1,1,1,1,6,2", 1));
        assert_eq!(3,read_line("??#??##??? 7,1", 1));
        assert_eq!(3,read_line("??#??#??#? 2,5", 1));
        assert_eq!(3,read_line("??#??#???.#??##?? 1,1,1,6", 1));
        assert_eq!(3,read_line("??#??..#??.?? 1,2,1,1", 1));
        assert_eq!(3,read_line("??#??.??.?. 5,1", 1));
        assert_eq!(3,read_line("??#???#??#...????? 9,3", 1));
        assert_eq!(3,read_line("??#???#??.??? 1,1,2,3", 1));
        assert_eq!(3,read_line("??#???#???.???## 1,1,1,2,5", 1));
        assert_eq!(3,read_line("??#???.??##?#??.??. 3,4,2,2", 1));
        assert_eq!(3,read_line("??#????#??.??.???? 1,6,1,2,1,1", 1));
        assert_eq!(3,read_line("??#????.??#.??????? 4,3,7", 1));
        assert_eq!(3,read_line("??#?????.?.???? 5,4", 1));
        assert_eq!(3,read_line("??#??????#. 4,3", 1));
        assert_eq!(3,read_line("??#??????#??#?#?# 7,2,1,1,1", 1));
        assert_eq!(3,read_line("??#???????#.?? 6,2", 1));
        assert_eq!(3,read_line("??#????????#??????.# 1,1,1,11,1", 1));
        assert_eq!(3,read_line("??..?.????##. 1,5", 1));
        assert_eq!(3,read_line("??.?##??#??... 2,3,3", 1));
        assert_eq!(3,read_line("??.?.##??#?#?????#? 2,1,5,2,1,2", 1));
        assert_eq!(3,read_line("??.?..???????.?? 1,7", 1));
        assert_eq!(3,read_line("???##?#.??? 6,1", 1));
        assert_eq!(3,read_line("???##??#?#??.??##?.. 5,3,5", 1));
        assert_eq!(3,read_line("???#.#..???? 2,1,2", 1));
        assert_eq!(3,read_line("???#.????.# 2,2,1", 1));
        assert_eq!(3,read_line("???#.????? 3,3", 1));
        assert_eq!(3,read_line("???#?#????.?#..? 7,1,2", 1));
        assert_eq!(3,read_line("???#??#???.???.#? 6,2", 1));
        assert_eq!(3,read_line("???#??.??.. 1,1,2", 1));
        assert_eq!(3,read_line("???#????..#????????# 5,1,1,1,4,1", 1));
        assert_eq!(3,read_line("???.##??#??# 1,8", 1));
        assert_eq!(3,read_line("???..??#??#?.. 3,3,2", 1));
        assert_eq!(3,read_line("???.??#.??????#? 3,2,4,2", 1));
        assert_eq!(3,read_line("???.???.????#?##? 3,1,1,1,6", 1));
        assert_eq!(3,read_line("???.????#?##?. 1,9", 1));
        assert_eq!(3,read_line("???.??????#???#??# 1,1,1,9,1", 1));
        assert_eq!(3,read_line("????####??##??????? 2,14", 1));
        assert_eq!(3,read_line("????###???.?##???? 2,5,1,2,1", 1));
        assert_eq!(3,read_line("????##?#??? 7,1", 1));
        assert_eq!(3,read_line("????##?..#. 2,3,1", 1));
        assert_eq!(3,read_line("????#??.#????##??.? 2,2,8,1", 1));
        assert_eq!(3,read_line("????#????? 1,7", 1));
        assert_eq!(3,read_line("????..?##?##.??? 6,1", 1));
        assert_eq!(3,read_line("????.?#???##???????? 4,12,1", 1));
        assert_eq!(3,read_line("????.?#?????#?#.# 1,1,2,7,1", 1));
        assert_eq!(3,read_line("?????#?#?.? 2,5,1", 1));
        assert_eq!(3,read_line("?????#??#? 1,1,4", 1));
        assert_eq!(3,read_line("??????##?#?? 1,4,3", 1));
        assert_eq!(3,read_line("??????#.??.? 6,1", 1));
        assert_eq!(3,read_line("??????#?#????#??? 2,13", 1));
        assert_eq!(3,read_line("??????.#??????.# 1,3,7,1", 1));
        assert_eq!(3,read_line("??????.?###?###??. 4,3,5", 1));
        assert_eq!(3,read_line("??????.?.#? 4,1", 1));
        assert_eq!(3,read_line("???????#??? 2,7", 1));
        assert_eq!(3,read_line("???????.#? 4,1,1", 1));
        assert_eq!(3,read_line("?????????###?###.? 5,8", 1));
        assert_eq!(3,read_line("?????????#?. 5,4", 1));
        assert_eq!(3,read_line("???????????.?.??? 1,8", 1));
        assert_eq!(30,read_line("#????????.?????? 3,1,2,2", 1));
        assert_eq!(30,read_line("?###?.??????? 4,1,1", 1));
        assert_eq!(30,read_line("?#??????#?#?????? 2,7,1", 1));
        assert_eq!(30,read_line("??#?????????.??.??. 4,1,1,1,2,1", 1));
        assert_eq!(30,read_line("??????.?#???#?. 1,1,2,3", 1));
        assert_eq!(30,read_line("???????????#??.????? 1,1,1,7,1,1", 1));
        assert_eq!(31,read_line(".?#???????????.##??? 1,2,2,2,2", 1));
        assert_eq!(31,read_line("???.??#??????? 1,4,1,1", 1));
        assert_eq!(31,read_line("????..????????? 2,3,2", 1));
        assert_eq!(32,read_line("??.??.???.?#?? 1,1,1,2", 1));
        assert_eq!(32,read_line("?????.?.???#?? 2,1,1,1", 1));
        assert_eq!(32,read_line("??????.?.??.##???# 1,1,1,1,4,1", 1));
        assert_eq!(33,read_line("?????..??????#?????# 1,1,1,2,3,3", 1));
        assert_eq!(34,read_line("?.????#.?.????#? 1,1,1,1,3", 1));
        assert_eq!(34,read_line("???????????#??? 2,1,6", 1));
        assert_eq!(35,read_line("#??????????##??? 1,2,1,3,1", 1));
        assert_eq!(35,read_line("????#????#?????? 1,2,1,3,1", 1));
        assert_eq!(35,read_line("????????????.??# 1,4,1,3", 1));
        assert_eq!(35,read_line("????????????????. 1,5,1,3", 1));
        assert_eq!(36,read_line("???#????.?##????.?#? 4,1,3,2,2", 1));
        assert_eq!(36,read_line("????#??.?????????? 2,4,2,1", 1));
        assert_eq!(37,read_line("??..????????. 1,1", 1));
        assert_eq!(39,read_line("?#?????.????.?????? 1,2,1,1,3,1", 1));
        assert_eq!(4,read_line("##??.?.??.?? 4,1,1,1", 1));
        assert_eq!(4,read_line("#.????#?##???? 1,1,1,6", 1));
        assert_eq!(4,read_line("#?##?.?????#?????# 4,1,7", 1));
        assert_eq!(4,read_line("#?#?#???.??.?#???#?? 1,1,1,1,1,8", 1));
        assert_eq!(4,read_line("#??##??.????????? 6,3,1,2", 1));
        assert_eq!(4,read_line("#???##?..??.?.#.?? 3,3,1,1,1,1", 1));
        assert_eq!(4,read_line("#???#?.#????.????. 1,1,2,1,3,1", 1));
        assert_eq!(4,read_line("#????##???.???? 7,2", 1));
        assert_eq!(4,read_line("#????##????#??#???? 1,14", 1));
        assert_eq!(4,read_line("#????#?????.?#? 1,1,4,1,1", 1));
        assert_eq!(4,read_line("#????.?##???#?#??? 3,1,3,2,1,1", 1));
        assert_eq!(4,read_line(".#????##??#.??.?? 1,6,1,1,1", 1));
        assert_eq!(4,read_line("...????.#?? 1,2", 1));
        assert_eq!(4,read_line("..?##??#?#.?????#??. 7,1,1,2", 1));
        assert_eq!(4,read_line("..?#?#.??#.?.?.? 4,1,1,1,1", 1));
        assert_eq!(4,read_line("..?.?##?????#.?#? 1,5,1,2", 1));
        assert_eq!(4,read_line("..??#.?#??#???????? 3,3,1,1,1,2", 1));
        assert_eq!(4,read_line("..??.??##?####??#? 1,12", 1));
        assert_eq!(4,read_line("..?????.?.?#?#?. 4,4", 1));
        assert_eq!(4,read_line(".?##?#?????..? 5,1,1,1", 1));
        assert_eq!(4,read_line(".?#.???.????? 2,2,4", 1));
        assert_eq!(4,read_line(".?#??.?..??##? 3,4", 1));
        assert_eq!(4,read_line(".?#???.?#? 3,2", 1));
        assert_eq!(4,read_line(".?#????..?#? 4,2", 1));
        assert_eq!(4,read_line(".?..???#..??..?.? 3,1", 1));
        assert_eq!(4,read_line(".?.??.??.?#?..? 1,1,1,3,1", 1));
        assert_eq!(4,read_line(".?.???.??##?#??## 1,2,6,2", 1));
        assert_eq!(4,read_line(".??###?.??????#??# 5,4,1,1", 1));
        assert_eq!(4,read_line(".??##??.??.#### 5,1,4", 1));
        assert_eq!(4,read_line(".??#?#?.?????? 5,5", 1));
        assert_eq!(4,read_line(".??#??.??#? 2,3", 1));
        assert_eq!(4,read_line(".??#???#.??#??? 3,2,5", 1));
        assert_eq!(4,read_line(".??.??.?##???#?##. 1,1,9", 1));
        assert_eq!(4,read_line(".???#?#???? 1,5,1", 1));
        assert_eq!(4,read_line(".???#?.#?#.?? 4,1,1,1", 1));
        assert_eq!(4,read_line(".???#?.?.??#?.#???? 2,3,3", 1));
        assert_eq!(4,read_line(".???.#?##???? 1,4", 1));
        assert_eq!(4,read_line(".????##?#?.##????? 8,4,1", 1));
        assert_eq!(4,read_line(".????#.???? 4,1", 1));
        assert_eq!(4,read_line(".?????##???.?..?#??? 9,2", 1));
        assert_eq!(4,read_line(".?????.#??? 2,3", 1));
        assert_eq!(4,read_line(".????????#????.#?? 10,2", 1));
        assert_eq!(4,read_line("?##.??#???#????#??? 2,1,1,4,3,1", 1));
        assert_eq!(4,read_line("?##?#?#?#????.? 5,1,1,1,1", 1));
        assert_eq!(4,read_line("?##??##????? 2,2,1", 1));
        assert_eq!(4,read_line("?#.??.??.?#. 1,1,1,2", 1));
        assert_eq!(4,read_line("?#.????##?.??.????? 2,7,1,4", 1));
        assert_eq!(4,read_line("?#?##???#?????#? 4,3,1,3", 1));
        assert_eq!(4,read_line("?#?#????#.??.?? 2,6,1", 1));
        assert_eq!(4,read_line("?#?.#..?##? 2,1,3", 1));
        assert_eq!(4,read_line("?#?.??????#??# 2,6,1", 1));
        assert_eq!(4,read_line("?#??#??.?##?? 5,4", 1));
        assert_eq!(4,read_line("?#???#?.#??#?#? 2,2,6", 1));
        assert_eq!(4,read_line("?#????#?.?.#..? 7,1,1", 1));
        assert_eq!(4,read_line("?#????..?????. 6,2", 1));
        assert_eq!(4,read_line("?#????.??? 1,2", 1));
        assert_eq!(4,read_line("?#????.???????#. 6,1,1,1,1", 1));
        assert_eq!(4,read_line("?#?????##???#? 2,9", 1));
        assert_eq!(4,read_line("?.#?#.??????? 1,1,4", 1));
        assert_eq!(4,read_line("?.#??#????##?#??.??? 5,2,1,1,1", 1));
        assert_eq!(4,read_line("?..?#???#???????#? 6,4", 1));
        assert_eq!(4,read_line("?.?##???#.?#?.# 1,4,1,2,1", 1));
        assert_eq!(4,read_line("?.?##?????#?#??#? 1,4,1,4,1", 1));
        assert_eq!(4,read_line("?.?#??##???.#.???#.? 5,1,1,1,1,1", 1));
        assert_eq!(4,read_line("?.?.?##???#????.?#? 10,2", 1));
        assert_eq!(4,read_line("?.??..??#?..??#????? 3,2", 1));
        assert_eq!(4,read_line("?.????#??????. 1,9", 1));
        assert_eq!(4,read_line("??#.???????#?#????# 1,1,11", 1));
        assert_eq!(4,read_line("??#?.????.?.??#??##? 3,1,2,1,7", 1));
        assert_eq!(4,read_line("??#??#???????.? 11,1", 1));
        assert_eq!(4,read_line("??#??.?????? 2,5", 1));
        assert_eq!(4,read_line("??.#..#?.?#?? 1,1,2,2", 1));
        assert_eq!(4,read_line("??..#??#.?? 1,4,1", 1));
        assert_eq!(4,read_line("??...?#??.????#?#. 2,2,2,3", 1));
        assert_eq!(4,read_line("??..??.?#? 1,3", 1));
        assert_eq!(4,read_line("??.?#?##????#?.?# 1,1,4,2,1", 1));
        assert_eq!(4,read_line("??.??#.#.??.???#??? 1,1,1,1,1,7", 1));
        assert_eq!(4,read_line("??.?????.? 1,4", 1));
        assert_eq!(4,read_line("???###?#.??. 1,3,1,1", 1));
        assert_eq!(4,read_line("???##?.???..?.?? 5,1,1,1,1", 1));
        assert_eq!(4,read_line("???#?#???#?#..? 1,5,1,1", 1));
        assert_eq!(4,read_line("???#??.??#???# 1,1,1,2", 1));
        assert_eq!(4,read_line("???#??????.? 5,1,1,1", 1));
        assert_eq!(4,read_line("???#??????????.#??? 1,9,1,2,1", 1));
        assert_eq!(4,read_line("???.#.?????#?###? 2,1,9", 1));
        assert_eq!(4,read_line("???..????.?. 3,2,1", 1));
        assert_eq!(4,read_line("???.?.#.??.?#.#???# 1,1,2,1,5", 1));
        assert_eq!(4,read_line("???.?..????.? 2,1,3,1", 1));
        assert_eq!(4,read_line("???.?.?????...??? 1,5", 1));
        assert_eq!(4,read_line("???.??????#?# 2,4,1,1", 1));
        assert_eq!(4,read_line("???.???????????? 1,1,1,4,4", 1));
        assert_eq!(4,read_line("????##????.?.???#.. 5,3", 1));
        assert_eq!(4,read_line("????#..??.?# 2,1,1,1", 1));
        assert_eq!(4,read_line("????#.??#??#?## 1,1,1,5", 1));
        assert_eq!(4,read_line("????#?#?????#. 5,2,1", 1));
        assert_eq!(4,read_line("????#?.?.##??# 2,1,3,1", 1));
        assert_eq!(4,read_line("????#??.?#??##?#?# 1,1,1,10", 1));
        assert_eq!(4,read_line("????#???#??#?????? 2,2,11", 1));
        assert_eq!(4,read_line("????#????#???#??#?? 7,5", 1));
        assert_eq!(4,read_line("?????####?#?.??. 10,1", 1));
        assert_eq!(4,read_line("?????#?##..???????? 1,7,3,1,1", 1));
        assert_eq!(4,read_line("?????#?#????????? 1,12,1", 1));
        assert_eq!(4,read_line("?????#???#??... 1,2,5", 1));
        assert_eq!(4,read_line("?????..?.? 4,1", 1));
        assert_eq!(4,read_line("??????#??#??.# 1,2,6,1", 1));
        assert_eq!(4,read_line("??????#??? 3,3,1", 1));
        assert_eq!(4,read_line("???????#?#??##?. 1,1,10", 1));
        assert_eq!(4,read_line("???????.???#??? 1,2,1,2,3", 1));
        assert_eq!(4,read_line("????????#...# 1,4,1", 1));
        assert_eq!(4,read_line("???????????#?#??. 1,7,2", 1));
        assert_eq!(4,read_line("????????????#?????? 1,1,14", 1));
        assert_eq!(40,read_line(".??????#??????.???# 1,2,3,1,1,1", 1));
        assert_eq!(40,read_line("??????.??? 1,1,1", 1));
        assert_eq!(40,read_line("???????.?? 1,1,1", 1));
        assert_eq!(41,read_line("?#?.????????.#.? 3,1,1,1,1", 1));
        assert_eq!(43,read_line("???????.?.?..???.#? 3,1,1,1,1,2", 1));
        assert_eq!(46,read_line("?????#.????????.#? 2,1,1,2,1,1", 1));
        assert_eq!(47,read_line(".????##????.??????? 7,2,1", 1));
        assert_eq!(48,read_line("?#?#?.??.?????? 4,1,1,1", 1));
        assert_eq!(49,read_line("?#??????????? 3,1,1", 1));
        assert_eq!(5,read_line("##??#?#?#????#??.??? 5,4,2,1,1", 1));
        assert_eq!(5,read_line("#.?????..?? 1,2", 1));
        assert_eq!(5,read_line("#?.#???#??.??.## 1,1,2,1,2", 1));
        assert_eq!(5,read_line("#??#.?????###? 4,1,5", 1));
        assert_eq!(5,read_line("#???#????.#? 1,2,1,1", 1));
        assert_eq!(5,read_line("#???????#?#? 1,1,6", 1));
        assert_eq!(5,read_line(".#.??##?#????#?. 1,7,2", 1));
        assert_eq!(5,read_line(".#?.?????? 2,2", 1));
        assert_eq!(5,read_line(".#????#.#??#?????? 1,2,1,1,4,1", 1));
        assert_eq!(5,read_line(".?#??#???? 5,1", 1));
        assert_eq!(5,read_line(".???#.?.???#? 4,1,2", 1));
        assert_eq!(5,read_line("?###????????#?#???.. 9,5", 1));
        assert_eq!(5,read_line("?#..#??#???????? 1,1,6,1", 1));
        assert_eq!(5,read_line("?#.????#??????? 1,7", 1));
        assert_eq!(5,read_line("?#??#???#???##??. 1,2,8", 1));
        assert_eq!(5,read_line("?#???#?.????#? 4,1,1,2", 1));
        assert_eq!(5,read_line("?#???.???????? 3,1,6", 1));
        assert_eq!(5,read_line("?#??????#??#?. 1,1,6", 1));
        assert_eq!(5,read_line("?#??????#???..??.?#? 10,1,1", 1));
        assert_eq!(5,read_line("?#??????.????##????? 6,1,1,4,1,1", 1));
        assert_eq!(5,read_line("?#??????????###???. 9,5", 1));
        assert_eq!(5,read_line("?.#?...?.?????.??#? 1,2,1,3,1,1", 1));
        assert_eq!(5,read_line("?.?.??#??. 1,1,3", 1));
        assert_eq!(5,read_line("?.??#?????#???? 8,1", 1));
        assert_eq!(5,read_line("?.??#??????#?? 1,1,3,4", 1));
        assert_eq!(5,read_line("?.???????###??.?..?# 1,10,1,1", 1));
        assert_eq!(5,read_line("??##??#??.?? 6,1", 1));
        assert_eq!(5,read_line("??#?##?#..???? 6,1", 1));
        assert_eq!(5,read_line("??#????#????? 7,2", 1));
        assert_eq!(5,read_line("??..??##?#???#?? 1,9", 1));
        assert_eq!(5,read_line("??..????####? 1,4", 1));
        assert_eq!(5,read_line("??..???????#..##?? 2,1,3,4", 1));
        assert_eq!(5,read_line("??.?#?..?? 2,1", 1));
        assert_eq!(5,read_line("??.?.?.#?? 1,1,2", 1));
        assert_eq!(5,read_line("??.????#?????# 2,5,2", 1));
        assert_eq!(5,read_line("???###?#??#?????? 8,4", 1));
        assert_eq!(5,read_line("???#??#.#????. 4,1,1", 1));
        assert_eq!(5,read_line("????##?.#?#? 1,3,1,1", 1));
        assert_eq!(5,read_line("?????#?#?.???. 6,2", 1));
        assert_eq!(5,read_line("??????#??#?. 1,4", 1));
        assert_eq!(5,read_line("????????#?#?.?? 5,4,2", 1));
        assert_eq!(52,read_line("???????????#??? 1,3,4", 1));
        assert_eq!(54,read_line("???????.???.??? 3,1,2", 1));
        assert_eq!(56,read_line("??.???????..?? 1,1,2,1", 1));
        assert_eq!(56,read_line("???????.??#??.?.? 2,1,3,1,1", 1));
        assert_eq!(56,read_line("?????????? 1,1,1", 1));
        assert_eq!(56,read_line("???????????? 2,2,1", 1));
        assert_eq!(56,read_line("????????????? 1,4,1", 1));
        assert_eq!(56,read_line("????????????????? 2,2,6", 1));
        assert_eq!(58,read_line("?.??????.????? 1,1,1,3", 1));
        assert_eq!(58,read_line("????#?????.??????. 7,1,1", 1));
        assert_eq!(6,read_line("##?#?###?????????.# 10,1,2,1", 1));
        assert_eq!(6,read_line("##???#???#????..# 3,3,1,1,1", 1));
        assert_eq!(6,read_line("#..???#?#.??#.??? 1,1,3,2,1", 1));
        assert_eq!(6,read_line("#.??#??#?.#???? 1,2,1,1,1", 1));
        assert_eq!(6,read_line("#.??.?????.???. 1,1,1,3,1", 1));
        assert_eq!(6,read_line("#?##.????#?? 1,2,1,3", 1));
        assert_eq!(6,read_line("#?????.?#????.???#?? 5,3,1,1,1,1", 1));
        assert_eq!(6,read_line(".#?.???.?????#??#??? 2,1,11", 1));
        assert_eq!(6,read_line(".#???????##??##?? 1,1,10", 1));
        assert_eq!(6,read_line("..????#?.??. 2,2,1", 1));
        assert_eq!(6,read_line("..?????????????.???. 12,1", 1));
        assert_eq!(6,read_line(".?##???.????.? 4,2", 1));
        assert_eq!(6,read_line(".?#.????#?#????????. 1,8,4", 1));
        assert_eq!(6,read_line(".?.??????#?.? 1,1,4,1", 1));
        assert_eq!(6,read_line(".??##?#?.????????? 5,7", 1));
        assert_eq!(6,read_line(".???##???.???#??. 7,3", 1));
        assert_eq!(6,read_line(".???#?.????#?? 3,5", 1));
        assert_eq!(6,read_line(".???#???#???.#?.? 6,1,1,1", 1));
        assert_eq!(6,read_line(".???.????#???#?#? 2,5,5", 1));
        assert_eq!(6,read_line(".?????.?#.? 1,1,2", 1));
        assert_eq!(6,read_line(".??????###?#?? 1,9", 1));
        assert_eq!(6,read_line(".??????.??##???????? 5,10", 1));
        assert_eq!(6,read_line(".???????## 1,2,2", 1));
        assert_eq!(6,read_line(".???????##??.???? 8,3", 1));
        assert_eq!(6,read_line(".?????????#.???????? 1,3,2,8", 1));
        assert_eq!(6,read_line("?#.??#?????##.?.??. 2,5,2,1,1", 1));
        assert_eq!(6,read_line("?#?#???####????.???? 2,1,9,1,1", 1));
        assert_eq!(6,read_line("?#?#????.???##????? 7,8", 1));
        assert_eq!(6,read_line("?#?..???.??? 1,1,1,1", 1));
        assert_eq!(6,read_line("?#??.????#?? 1,1,4", 1));
        assert_eq!(6,read_line("?.?#??.??#????##?? 2,9", 1));
        assert_eq!(6,read_line("?.?.?.##?.??. 1,1,2,1", 1));
        assert_eq!(6,read_line("?.??#??????##??#?#?. 4,9", 1));
        assert_eq!(6,read_line("?.???#?????? 1,1,5", 1));
        assert_eq!(6,read_line("?.???.????#? 1,2,2,2", 1));
        assert_eq!(6,read_line("?.????.??.?. 3,1", 1));
        assert_eq!(6,read_line("?.?????.????###?? 4,7", 1));
        assert_eq!(6,read_line("??##??##?????#?? 9,4", 1));
        assert_eq!(6,read_line("??##??..???#.? 5,1,1", 1));
        assert_eq!(6,read_line("??#??.??.? 4,1", 1));
        assert_eq!(6,read_line("??#???????.#? 6,1,1", 1));
        assert_eq!(6,read_line("??#????????##? 4,6", 1));
        assert_eq!(6,read_line("??.#??###?#.???.#.. 1,1,6,1,1", 1));
        assert_eq!(6,read_line("??.?#.???.???#?#?#? 1,2,1,6,1", 1));
        assert_eq!(6,read_line("??.?#??????????#?? 4,5", 1));
        assert_eq!(6,read_line("??.???#????#????#??? 2,4,1,2,4,1", 1));
        assert_eq!(6,read_line("??.????#?#? 1,2,4", 1));
        assert_eq!(6,read_line("???#.#???###?????? 1,2,1,6,2", 1));
        assert_eq!(6,read_line("???#???#??##???#??#? 2,6,3,1", 1));
        assert_eq!(6,read_line("???..????? 3,1,1", 1));
        assert_eq!(6,read_line("???.????#?#???. 2,1,1,2,1", 1));
        assert_eq!(6,read_line("????#?#??#??? 1,5,1,1", 1));
        assert_eq!(6,read_line("????#?.??? 2,2,2", 1));
        assert_eq!(6,read_line("????#???#??.??#?. 1,5,1,1,2", 1));
        assert_eq!(6,read_line("????.?###??? 2,5", 1));
        assert_eq!(6,read_line("????.???##??.??.?#.. 1,1,7,1,1", 1));
        assert_eq!(6,read_line("????.????#? 2,2,1", 1));
        assert_eq!(6,read_line("????.??????? 1,2,2,2", 1));
        assert_eq!(6,read_line("?????###????? 1,9", 1));
        assert_eq!(6,read_line("?????#...???? 2,1,3", 1));
        assert_eq!(6,read_line("?????#?##?????#? 1,1,6,1,2", 1));
        assert_eq!(6,read_line("?????#????.????#?? 3,1,3,4", 1));
        assert_eq!(6,read_line("??????#...?#?#?? 3,1,5", 1));
        assert_eq!(6,read_line("??????#??? 3,2", 1));
        assert_eq!(6,read_line("??????#?????????? 1,5,1,1,4", 1));
        assert_eq!(6,read_line("??????.??#?.. 4,3", 1));
        assert_eq!(6,read_line("??????.??? 5,1", 1));
        assert_eq!(6,read_line("???????.#.??? 5,1,1,1", 1));
        assert_eq!(6,read_line("???????.?#??.??#?? 1,4,4,4", 1));
        assert_eq!(6,read_line("????????.#?. 1,4,1", 1));
        assert_eq!(6,read_line("??????????????.##? 9,2", 1));
        assert_eq!(63,read_line("??.??????#??.??? 1,1,3,1,1", 1));
        assert_eq!(65,read_line("#.??????..???????? 1,2,2,2,1", 1));
        assert_eq!(7,read_line("#???#?#?#?#?????? 2,9,1", 1));
        assert_eq!(7,read_line(".#????.?.?????? 4,1", 1));
        assert_eq!(7,read_line(".#???????.?.?? 1,3,1,2", 1));
        assert_eq!(7,read_line("..?????#.? 1,1,1", 1));
        assert_eq!(7,read_line(".?.?.??..? 1,1,1", 1));
        assert_eq!(7,read_line(".??.??????? 1,5", 1));
        assert_eq!(7,read_line(".??????#?#?#??? 1,8,1", 1));
        assert_eq!(7,read_line(".??????#??????#.? 1,1,1,6,1", 1));
        assert_eq!(7,read_line("?##.#?????.? 2,1,1,1", 1));
        assert_eq!(7,read_line("?#??????#?.???.?? 1,7,1,1", 1));
        assert_eq!(7,read_line("?..##?#.??.??? 1,4,1,1", 1));
        assert_eq!(7,read_line("?.?.??#??? 1,3", 1));
        assert_eq!(7,read_line("?.????????? 1,4,2", 1));
        assert_eq!(7,read_line("??#?#?#.??#???????.? 6,2,3", 1));
        assert_eq!(7,read_line("??#???????##????.#?? 1,4,5,3", 1));
        assert_eq!(7,read_line("??.?#???#??? 1,1,3", 1));
        assert_eq!(7,read_line("??.???..##? 1,1,3", 1));
        assert_eq!(7,read_line("???##?????#.??#???#. 3,1,1,5", 1));
        assert_eq!(7,read_line("???#??????.? 6,1,1", 1));
        assert_eq!(7,read_line("???#??????? 1,4,2", 1));
        assert_eq!(7,read_line("????#????#???? 1,6,2", 1));
        assert_eq!(7,read_line("?????##?.??.? 1,3,2", 1));
        assert_eq!(7,read_line("?????##??#?? 1,6", 1));
        assert_eq!(7,read_line("?????#???#. 1,2,1", 1));
        assert_eq!(7,read_line("??????.?.???#???#? 1,9", 1));
        assert_eq!(7,read_line("???????#?#????#???. 10,3,1", 1));
        assert_eq!(7,read_line("???????#?. 2,3", 1));
        assert_eq!(8,read_line("#??.?#????#??.? 1,1,2,2,1", 1));
        assert_eq!(8,read_line("#????#??##???#?.?? 1,1,1,4,1,1", 1));
        assert_eq!(8,read_line(".##???????..???? 2,2", 1));
        assert_eq!(8,read_line("..??.?#???.?#?#?. 1,3,4", 1));
        assert_eq!(8,read_line(".?#??#???.?.??#??#?. 5,1,1,1,3", 1));
        assert_eq!(8,read_line(".??#?????.????? 7,2", 1));
        assert_eq!(8,read_line(".??.#.?.#??? 1,1,1,1", 1));
        assert_eq!(8,read_line(".???###?.????#??#??? 4,7", 1));
        assert_eq!(8,read_line(".?????.##???#?.???? 4,7,1", 1));
        assert_eq!(8,read_line(".?????....?#????#?.? 2,7", 1));
        assert_eq!(8,read_line("?#.?#??????.????? 2,6,1,1,1", 1));
        assert_eq!(8,read_line("?#??.?????##?#?.?.# 2,1,7,1", 1));
        assert_eq!(8,read_line("?#???#?#?.??#? 2,4,2", 1));
        assert_eq!(8,read_line("?#???#??.?????#?.?? 6,6,1", 1));
        assert_eq!(8,read_line("?#????#????#?? 3,2,1,2", 1));
        assert_eq!(8,read_line("?.?#?.???????.#? 2,4,1", 1));
        assert_eq!(8,read_line("??#????.?#? 1,1,2", 1));
        assert_eq!(8,read_line("??.#.??#..?? 1,1,1,1", 1));
        assert_eq!(8,read_line("??.??.????? 1,4", 1));
        assert_eq!(8,read_line("??.??????.. 2,2", 1));
        assert_eq!(8,read_line("???#?#????.??#? 6,3", 1));
        assert_eq!(8,read_line("???#??#??????#?. 7,2", 1));
        assert_eq!(8,read_line("???..??##.???#???? 3,2,1,1,1", 1));
        assert_eq!(8,read_line("????###???.?#???. 6,2", 1));
        assert_eq!(8,read_line("????#.???#??????##?# 2,2,1,1,2,4", 1));
        assert_eq!(8,read_line("????#?#???#?.?.?.? 8,1", 1));
        assert_eq!(8,read_line("?????###?????..?? 1,8,1,1", 1));
        assert_eq!(8,read_line("??????#?????#? 1,2,2,4", 1));
        assert_eq!(80,read_line("?????????.??????? 5,1,1,1,1", 1));
        assert_eq!(81,read_line("????????#?????????#? 1,2,3,1,5", 1));
        assert_eq!(83,read_line("???.?.??????????? 2,1,3,2", 1));
        assert_eq!(88,read_line("??????.?????????? 4,2,1", 1));
        assert_eq!(9,read_line("#?.??????##? 1,1,1,3", 1));
        assert_eq!(9,read_line("..??.???.??.?. 1,2", 1));
        assert_eq!(9,read_line(".?#??#???#??????.?? 4,6,1", 1));
        assert_eq!(9,read_line(".??.??.??#??.??#??? 2,2,1,1,2,1", 1));
        assert_eq!(9,read_line(".???#??.????#.#?.??? 4,5,1,1", 1));
        assert_eq!(9,read_line(".????.??#?..?#?? 1,2,4", 1));
        assert_eq!(9,read_line(".??????#?#?? 1,6", 1));
        assert_eq!(9,read_line(".??????#?? 1,1,2", 1));
        assert_eq!(9,read_line("?..??..??????#? 1,5", 1));
        assert_eq!(9,read_line("?.?????#??#???#?? 1,9", 1));
        assert_eq!(9,read_line("??#????????.? 4,3", 1));
        assert_eq!(9,read_line("??#?????????#?? 3,5,1", 1));
        assert_eq!(9,read_line("??.#.???.?.???. 1,1,1,1,3", 1));
        assert_eq!(9,read_line("??.#??.????? 1,1,2,1", 1));
        assert_eq!(9,read_line("???.??#????##?#?#?? 2,2,7", 1));
        assert_eq!(9,read_line("???.????#? 1,3", 1));
        assert_eq!(9,read_line("???.??????.??#? 1,2,2,4", 1));
        assert_eq!(9,read_line("????##??#?.??? 1,7,1", 1));
        assert_eq!(9,read_line("????#.#??????? 1,2,1,3", 1));
        assert_eq!(9,read_line("????#?#??.????#?? 5,5", 1));
        assert_eq!(9,read_line("????#???##??????. 8,2", 1));
        assert_eq!(9,read_line("????.#?????#?#? 1,2,5", 1));
        assert_eq!(9,read_line("????.??##?? 2,4", 1));
        assert_eq!(9,read_line("????.????###???#?#? 1,1,1,5,2,1", 1));
        assert_eq!(9,read_line("?????#??????.???#?? 3,3", 1));
        assert_eq!(9,read_line("?????.?####??.? 3,5,1", 1));
        assert_eq!(9,read_line("?????.???#?? 2,1,1,3", 1));
        assert_eq!(9,read_line("???????#?..#?#?? 2,1,2,3", 1));
        assert_eq!(91,read_line("??????????.? 1,1,1,1", 1));
    }
}

